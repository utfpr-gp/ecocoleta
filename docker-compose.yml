services:
  # CONTAINER POSTGRES
  db:
    image: postgis/postgis:17-3.5-alpine
    container_name: ecocoleta-database
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app-network

  # CONTAINERS BACKEND E FRONTEND
  backend:
    image: ecocoleta-backend:latest
    container_name: ecocoleta-backend
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    ports:
      - '8080:8080'
    env_file:
      - ./backend/.env  # Carrega as variáveis de ambiente
    networks:
      - app-network

  # frontend:
  #   image: ecocoleta-frontend:latest
  #   container_name: ecocoleta-frontend
  #   build:
  #     context: ./frontend/
  #     dockerfile: ./Dockerfile
  #   environment:
  #     #ativa o modo de ambiente de produção para node, melhor desempenho
  #     NODE_ENV: production
  #   ports:
  #     - '80:80'
  #   restart: always
  #   depends_on:
  #     - backend
  #   networks:
  #     - app-network

volumes:
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge

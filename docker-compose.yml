services:
  # CONTAINER POSTGRES
  db:
    image: postgis/postgis:17-3.5-alpine
    container_name: ecocoleta-database
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app-network

  # CONTAINERS BACKEND E FRONTEND - not use now
  backend:
    image: ronifabio/ecocoleta-backend:latest
    container_name: ecocoleta-backend
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    ports:
      - '8080:8080'
    env_file:
      - .env
    restart: always
    environment:
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_VERIFY_SERVICE_SID: ${TWILIO_VERIFY_SERVICE_SID}
      #acessa o banco de dados via rede interna (bridge network) criado
      SPRING_DATASOURCE_URL: ${DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      # SPRING_DATASOURCE_DRIVER-CLAS-NAME: org.postgresql.Driver
      # SPRING_JPA_PROPERTIES_HIPERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      #acessa o banco de dados via rede interna (bridge network) criado
      # SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/ecocoleta_db?useSSL=false&serverTimezone=UTC
      # SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      # SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    image: ronifabio/ecocoleta-frontend:latest
    container_name: ecocoleta-frontend
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    environment:
      #ativa o modo de ambiente de produção para node, melhor desempenho
      NODE_ENV: production
    ports:
      - '80:80'
    restart: always
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge
